{"version":3,"file":"index.js","sources":["../src/text/text.tsx","../src/select/select.tsx","../src/grid/row.tsx","../src/grid/small.tsx","../src/grid/medium.tsx","../src/grid/large.tsx","../src/grid/extra-large.tsx","../src/container/container.tsx","../src/index.tsx"],"sourcesContent":["import classNames from 'classnames'\nimport * as React from 'react'\nimport 'materialize-css/dist/css/materialize.css'\n\nexport interface TextProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'type' | 'onChange'> {\n  value?: string\n  onChange: (value: string) => void\n  className?: string\n}\n\nexport const Text: React.FunctionComponent<TextProps> = ({\n  onChange,\n  className,\n  ...props\n}: TextProps) => {\n  const change = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    onChange(event.currentTarget.value)\n  }\n  const componentProps: React.HTMLProps<HTMLInputElement> = {\n    type: 'text',\n    onChange: change,\n    className: classNames('input-field', className),\n    ...props\n  }\n  return <input {...componentProps} />\n}\n","import classNames from 'classnames'\nimport * as React from 'react'\nimport styles from './select.module.css'\nimport 'materialize-css/dist/css/materialize.css'\n\nexport interface SelectOption {\n  label: string\n  value: any\n  disabled?: boolean\n}\n\nexport interface SelectProps\n  extends Omit<React.HTMLProps<HTMLSelectElement>, 'onChange' | 'children'> {\n  onChange: (value: any) => void\n  options: SelectOption[]\n}\n\nexport const Select: React.FunctionComponent<SelectProps> = ({\n  onChange,\n  className,\n  options,\n  ...props\n}: SelectProps) => {\n  const change = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onChange(event.currentTarget.value)\n  }\n  const componentProps: React.HTMLProps<HTMLSelectElement> = {\n    onChange: change,\n    ...props\n  }\n  const [showOptions, setShowOptions] = React.useState<boolean>(false)\n  return (\n    <div\n      className={classNames('input-field', 'relative', className)}\n      onClick={() => setShowOptions(!showOptions)}\n    >\n      <div className='select-wrapper'>\n        <input\n          className='select-dropdown dropdown-trigger'\n          type='text'\n          readOnly\n          value={props.value || props.placeholder}\n        />\n        <ul\n          className={classNames('dropdown-content', 'select-dropdown', {\n            [styles.open]: showOptions\n          })}\n        >\n          {options.map(({ value, label, disabled }) => (\n            <li\n              key={value}\n              className={classNames({\n                disabled: disabled,\n                selected: value === props.value\n              })}\n              onClick={(event) => {\n                event.stopPropagation()\n                if (!disabled) {\n                  onChange(value)\n                  setShowOptions(false)\n                }\n              }}\n            >\n              <span>{label}</span>\n            </li>\n          ))}\n        </ul>\n        <svg\n          className='caret'\n          height='24'\n          viewBox='0 0 24 24'\n          width='24'\n          xmlns='http://www.w3.org/2000/svg'\n        >\n          <path d='M7 10l5 5 5-5z' />\n          <path d='M0 0h24v24H0z' fill='none' />\n        </svg>\n        <select {...componentProps}>\n          {options.map(({ value, label }) => (\n            <option key={value} value={value} selected={props.value === value}>\n              {label}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { ParentComponent } from '../types/parent-component'\nimport 'materialize-css/dist/css/materialize.css'\n\nexport interface RowProps extends ParentComponent {}\n\nexport const Row: React.FunctionComponent<RowProps> = ({\n  children\n}: RowProps) => {\n  return <div className='row'>{children}</div>\n}\n","import * as React from 'react'\nimport { ParentComponent } from '../types/parent-component'\nimport 'materialize-css/dist/css/materialize.css'\n\nexport interface SmallProps extends ParentComponent {}\n\nexport const Small: React.FunctionComponent<SmallProps> = ({\n  children\n}: SmallProps) => <div className='col s6 m4 l2'>{children}</div>\n","import * as React from 'react'\nimport { ParentComponent } from '../types/parent-component'\nimport 'materialize-css/dist/css/materialize.css'\n\nexport interface MediumProps extends ParentComponent {}\n\nexport const Medium: React.FunctionComponent<MediumProps> = ({\n  children\n}: MediumProps) => <div className='col s8 m6 l4'>{children}</div>\n","import * as React from 'react'\nimport { ParentComponent } from '../types/parent-component'\nimport 'materialize-css/dist/css/materialize.css'\n\nexport interface LargeProps extends ParentComponent {}\n\nexport const Large: React.FunctionComponent<LargeProps> = ({\n  children\n}: LargeProps) => <div className='col s10 m8 l6'>{children}</div>\n","import * as React from 'react'\nimport { ParentComponent } from '../types/parent-component'\nimport 'materialize-css/dist/css/materialize.css'\n\nexport interface ExtraLargeProps extends ParentComponent {}\n\nexport const ExtraLarge: React.FunctionComponent<ExtraLargeProps> = ({\n  children\n}: ExtraLargeProps) => <div className='col s12 m10 l8'>{children}</div>\n","import * as React from 'react'\nimport 'materialize-css/dist/css/materialize.css'\nimport { ParentComponent } from '../types/parent-component'\n\nexport interface ContainerProps extends ParentComponent {\n  children?: React.ReactNode | React.ReactNode[]\n}\n\nexport const Container: React.FunctionComponent<ContainerProps> = ({\n  children\n}: ContainerProps) => {\n  return <div className='container'>{children}</div>\n}\n","import * as React from 'react'\nimport styles from './styles.module.css'\n\ninterface Props {\n  text: string\n}\n\nexport const ExampleComponent = ({ text }: Props) => {\n  return <div className={styles.test}>Example Component: {text}</div>\n}\n\nexport { Text } from './text/text'\nexport { Select } from './select/select'\nexport { Row } from './grid/row'\nexport { Small } from './grid/small'\nexport { Medium } from './grid/medium'\nexport { Large } from './grid/large'\nexport { ExtraLarge } from './grid/extra-large'\nexport { Container } from './container/container'\n"],"names":["Text","onChange","className","props","change","event","currentTarget","value","componentProps","type","classNames","React","Select","options","showOptions","setShowOptions","onClick","readOnly","placeholder","styles","open","map","label","disabled","key","selected","stopPropagation","height","viewBox","width","xmlns","d","fill","Row","children","Small","Medium","Large","ExtraLarge","Container","ExampleComponent","text","test"],"mappings":"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"}