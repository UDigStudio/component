{"version":3,"file":"index.modern.js","sources":["../src/text/text.tsx","../src/select/select.tsx","../src/grid/row.tsx","../src/grid/small.tsx","../src/grid/medium.tsx","../src/grid/large.tsx","../src/grid/extra-large.tsx","../src/container/container.tsx","../src/index.tsx"],"sourcesContent":["import classNames from 'classnames'\nimport * as React from 'react'\nimport 'materialize-css/dist/css/materialize.css'\n\nexport interface TextProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'type' | 'onChange'> {\n  value?: string\n  onChange: (value: string) => void\n  className?: string\n}\n\nexport const Text: React.FunctionComponent<TextProps> = ({\n  onChange,\n  className,\n  ...props\n}: TextProps) => {\n  const change = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    onChange(event.currentTarget.value)\n  }\n  const componentProps: React.HTMLProps<HTMLInputElement> = {\n    type: 'text',\n    onChange: change,\n    className: classNames('input-field', className),\n    ...props\n  }\n  return <input {...componentProps} />\n}\n","import classNames from 'classnames'\nimport * as React from 'react'\nimport styles from './select.module.css'\nimport 'materialize-css/dist/css/materialize.css'\n\nexport interface SelectOption {\n  label: string\n  value: any\n  disabled?: boolean\n}\n\nexport interface SelectProps\n  extends Omit<React.HTMLProps<HTMLSelectElement>, 'onChange' | 'children'> {\n  onChange: (value: any) => void\n  options: SelectOption[]\n}\n\nexport const Select: React.FunctionComponent<SelectProps> = ({\n  onChange,\n  className,\n  options,\n  ...props\n}: SelectProps) => {\n  const change = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onChange(event.currentTarget.value)\n  }\n  const componentProps: React.HTMLProps<HTMLSelectElement> = {\n    onChange: change,\n    ...props\n  }\n  const [showOptions, setShowOptions] = React.useState<boolean>(false)\n  return (\n    <div\n      className={classNames('input-field', 'relative', className)}\n      onClick={() => setShowOptions(!showOptions)}\n    >\n      <div className='select-wrapper'>\n        <input\n          className='select-dropdown dropdown-trigger'\n          type='text'\n          readOnly\n          value={props.value || props.placeholder}\n        />\n        <ul\n          className={classNames('dropdown-content', 'select-dropdown', {\n            [styles.open]: showOptions\n          })}\n        >\n          {options.map(({ value, label, disabled }) => (\n            <li\n              key={value}\n              className={classNames({\n                disabled: disabled,\n                selected: value === props.value\n              })}\n              onClick={(event) => {\n                event.stopPropagation()\n                if (!disabled) {\n                  onChange(value)\n                  setShowOptions(false)\n                }\n              }}\n            >\n              <span>{label}</span>\n            </li>\n          ))}\n        </ul>\n        <svg\n          className='caret'\n          height='24'\n          viewBox='0 0 24 24'\n          width='24'\n          xmlns='http://www.w3.org/2000/svg'\n        >\n          <path d='M7 10l5 5 5-5z' />\n          <path d='M0 0h24v24H0z' fill='none' />\n        </svg>\n        <select {...componentProps}>\n          {options.map(({ value, label }) => (\n            <option key={value} value={value} selected={props.value === value}>\n              {label}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { ParentComponent } from '../types/parent-component'\nimport 'materialize-css/dist/css/materialize.css'\n\nexport interface RowProps extends ParentComponent {}\n\nexport const Row: React.FunctionComponent<RowProps> = ({\n  children\n}: RowProps) => {\n  return <div className='row'>{children}</div>\n}\n","import * as React from 'react'\nimport { ParentComponent } from '../types/parent-component'\nimport 'materialize-css/dist/css/materialize.css'\n\nexport interface SmallProps extends ParentComponent {}\n\nexport const Small: React.FunctionComponent<SmallProps> = ({\n  children\n}: SmallProps) => <div className='col s6 m3 l1'>{children}</div>\n","import * as React from 'react'\nimport { ParentComponent } from '../types/parent-component'\nimport 'materialize-css/dist/css/materialize.css'\n\nexport interface MediumProps extends ParentComponent {}\n\nexport const Medium: React.FunctionComponent<MediumProps> = ({\n  children\n}: MediumProps) => <div className='col s8 m5 l3'>{children}</div>\n","import * as React from 'react'\nimport { ParentComponent } from '../types/parent-component'\nimport 'materialize-css/dist/css/materialize.css'\n\nexport interface LargeProps extends ParentComponent {}\n\nexport const Large: React.FunctionComponent<LargeProps> = ({\n  children\n}: LargeProps) => <div className='col s10 m7 l5'>{children}</div>\n","import * as React from 'react'\nimport { ParentComponent } from '../types/parent-component'\nimport 'materialize-css/dist/css/materialize.css'\n\nexport interface ExtraLargeProps extends ParentComponent {}\n\nexport const ExtraLarge: React.FunctionComponent<ExtraLargeProps> = ({\n  children\n}: ExtraLargeProps) => <div className='col s12 m8 l7'>{children}</div>\n","import * as React from 'react'\nimport 'materialize-css/dist/css/materialize.css'\nimport { ParentComponent } from '../types/parent-component'\n\nexport interface ContainerProps extends ParentComponent {\n  children?: React.ReactNode | React.ReactNode[]\n}\n\nexport const Container: React.FunctionComponent<ContainerProps> = ({\n  children\n}: ContainerProps) => {\n  return <div className='container'>{children}</div>\n}\n","import * as React from 'react'\nimport styles from './styles.module.css'\n\ninterface Props {\n  text: string\n}\n\nexport const ExampleComponent = ({ text }: Props) => {\n  return <div className={styles.test}>Example Component: {text}</div>\n}\n\nexport { Text } from './text/text'\nexport { Select } from './select/select'\nexport { Row } from './grid/row'\nexport { Small } from './grid/small'\nexport { Medium } from './grid/medium'\nexport { Large } from './grid/large'\nexport { ExtraLarge } from './grid/extra-large'\nexport { Container } from './container/container'\n"],"names":["Text","onChange","className","props","change","event","currentTarget","value","componentProps","type","classNames","React","Select","options","showOptions","setShowOptions","onClick","readOnly","placeholder","styles","open","map","label","disabled","key","selected","stopPropagation","height","viewBox","width","xmlns","d","fill","Row","children","Small","Medium","Large","ExtraLarge","Container","ExampleComponent","text","test"],"mappings":"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"}